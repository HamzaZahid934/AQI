name: Selenium Pytest Automation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  automation-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: pdo, sqlite, pdo_sqlite, mbstring, xml, ctype, iconv, intl, pdo_mysql

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Copy environment file
        run: cp .env.example .env

      - name: Configure environment for testing
        run: |
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=/home/runner/work/AQI/AQI/database/database.sqlite" >> .env
          echo "CACHE_DRIVER=file" >> .env
          echo "SESSION_DRIVER=file" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env
          echo "IQAIR_API_KEY=dummy_key" >> .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Create SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Create storage directories
        run: |
          mkdir -p storage/framework/cache/data
          mkdir -p storage/framework/sessions
          mkdir -p storage/framework/views
          mkdir -p storage/logs
          chmod -R 775 storage

      - name: Start Laravel server
        run: |
          php artisan serve --host=0.0.0.0 --port=8000 &
          echo $! > server.pid
        env:
          APP_ENV: testing

      - name: Wait for server to be ready
        run: |
          echo "Waiting for Laravel server to be ready..."
          timeout 60 bash -c 'until curl -f http://localhost:8000 > /dev/null 2>&1; do echo "Server not ready, waiting..."; sleep 2; done'
          echo "Server is ready!"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Generate timestamp
        run: echo "TIMESTAMP=$(date +%Y%m%d_%H%M%S)" >> $GITHUB_ENV

      - name: Run pytest
        run: |
          cd tests-Automation
          pytest --html=../reports/report_${TIMESTAMP}.html --self-contained-html -v

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-html-report-${{ env.TIMESTAMP }}
          path: reports/report_${{ env.TIMESTAMP }}.html
